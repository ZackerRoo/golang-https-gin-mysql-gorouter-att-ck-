attack_technique: T1055.004
display_name: 'Process Injection: Asynchronous Procedure Call'
atomic_tests:
- name: Remote Process Injection with Go using NtQueueApcThreadEx WinAPI
  auto_generated_guid: 4cc571b1-f450-414a-850f-879baf36aa06
  description: |
    Uses the undocumented NtQueueAPCThreadEx WinAPI to create a "Special User APC" in the current thread of the current process to execute shellcode. 
    Since the shellcode is loaded and executed in the current process it is considered local shellcode execution.

    Steps taken with this technique:
    1. Allocate memory for the shellcode with VirtualAlloc setting the page permissions to Read/Write
    2. Use the RtlCopyMemory macro to copy the shellcode to the allocated memory space
    3. Change the memory page permissions to Execute/Read with VirtualProtect
    4. Get a handle to the current thread
    5. Execute the shellcode in the current thread by creating a Special User APC through the NtQueueApcThreadEx function

    - PoC Credit: (https://github.com/Ne0nd0g/go-shellcode/tree/master#rtlcreateuserthread)
    - References:
      - https://repnz.github.io/posts/apc/user-apc/
      - https://docs.rs/ntapi/0.3.1/ntapi/ntpsapi/fn.NtQueueApcThreadEx.html
      - https://0x00sec.org/t/process-injection-apc-injection/24608
      - https://twitter.com/aionescu/status/992264290924032005
      - http://www.opening-windows.com/techart_windows_vista_apc_internals2.htm#_Toc229652505
  supported_platforms:
  - windows
  dependency_executor_name: powershell
  dependencies:
  - description: |
      NtQueueApcThreadEx executable must exist at specified location (C:\AtomicTests\source\NtQueueApcThreadEx.exe)
    prereq_command: |
      if (Test-Path "C:\AtomicTests\source\NtQueueApcThreadEx.exe") {exit 0} else {exit 1}
    get_prereq_command: |
      New-Item -Type Directory "C:\AtomicTests\source" -ErrorAction ignore | Out-Null
      Invoke-WebRequest "https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1055.004/bin/x64/NtQueueApcThreadEx.exe" -OutFile "C:\AtomicTests\source\NtQueueApcThreadEx.exe"
  executor:
    command: |-
      & "C:\AtomicTests\source\NtQueueApcThreadEx.exe" -debug
    cleanup_command: |
      Stop-Process -Name CalculatorApp -ErrorAction SilentlyContinue
    name: powershell
    elevation_required: true
# 即便执行返回1 有可能也是成功的
